class JelMethods

  def initialize
    @questions = [
        "Переживаете ли вы в ожидании важной деловой встречи?",
        "Если вам поручат выступить с докладом на каком либо мероприятии, вызовет ли это у вас чувство дискомфорта? ",
        "Вы откладываете поход к врачу до последнего момента? ",
        "Если вам предстоит командировка в незнакомый город, постараетесь ли вы избежать этой командировки? ",
        "Вы делитесь своими мыслями и чувствами с кем бы то ни было? ",
        "Вас раздражает, когда незнакомые люди на улице обращаются к вам с вопросом? ",
        "Вы думаете, что людям разных поколений действительно трудно понимать друг друга? ",
        "Вам сложно будет сказать человеку, чтобы он вернул вам деньги, взятые у вас несколько месяцев назад? ",
        "Вам подали некачественное блюдо в кафе. Промолчите ли вы?",
        "Вы заговорите с незнакомым человеком, оставшись с ним наедине? ",
        "Обнаружив в кассе, магазине, библиотеке длинную очередь, вы встанете в нее? ",
        "Вам неприятно быть судьей в чужих конфликтах? ",
        "Вы всегда оцениваете произведения искусства на свой вкус, не прислушиваясь к чужому мнению? ",
        "Если кто то выскажет ошибочную точку зрения на хорошо известный вам вопрос, вы предпочтете промолчать и не исправлять его? ",
        "Просьбы помочь в учебе или работе раздражают вас?",
        "Вам проще изложить свое мнение на бумаге, чем рассказать о нем? "
    ]
    @points = 0
    @current_question = 0
  end

  def ask
    puts @questions[@current_question.to_i]

    user_input = nil

    until (user_input == 1 or user_input == 2 or user_input == 3)
      puts "введите число: 1 – да, 2 – нет, 3 – иногда, и нажмите Enter"
      user_input = gets.chomp.to_i
    end

    if (user_input == 1)
      @points += 2
    elsif (user_input == 3)
      @points += 1
    end

    @current_question += 1

    if @current_question >= @questions.size
      return false
    else
      return true
    end
  end

  def points
    return @points
  end

end